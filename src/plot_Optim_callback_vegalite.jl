using VegaLite, DataFrames #
using LaTeXStrings




df = DataFrame(
    method = Array{String}(undef, 0),
    time = Array{Float64}(undef, 0),
    iteration = Array{Int64}(undef, 0),
    qval = Array{Float64}(undef, 0),
    normgradq = Array{Float64}(undef, 0)
)
function mypush!(df, method_name, time_iter_q_normgradq)
    start_time = time_iter_q_normgradq[1, 1]
    for i in 1:size(time_iter_q_normgradq, 1)
        time_iter_q_normgradq[i, 1] -= start_time
        push!(df, [method_name; time_iter_q_normgradq[i, :]])
    end
    return df
end

println("The data being plotted was copy-pasted from Katana output!")
#    time                   iteration      q(λ)           |Dq(λ)|
method_name = "FD1"
time_iter_q_normgradq = [
    1.552608569246831e9      -1    9.973847e-02     9.846679e-02
    1552608938.9645440578     0    9.973847e-02     9.846679e-02
    1552609301.4314579964     1     1.679853e-02     6.089921e-02
    1552609702.1624119282     2     6.970752e-03     2.493435e-02
    1552610021.6017289162     3     5.678668e-03     2.275158e-03
    1552610332.3074998856     4     5.529873e-03     9.009779e-04
    1552610652.6657860279     5     5.521264e-03     4.902208e-05
    1552610962.7022309303     6     5.521236e-03     5.855503e-07
    1552610990.2858099937     7     5.521236e-03     3.754357e-10
]
mypush!(df, method_name, time_iter_q_normgradq)


method_name = "CSD"
time_iter_q_normgradq = [
    1.552611003792975e9      -1    9.973847e-02     9.846679e-02
    1552611483.8713469505     0    9.973847e-02     9.846679e-02
    1552611867.83081007     1     1.679872e-02     6.089963e-02
    1552612388.0375878811     2     6.970948e-03     2.493615e-02
    1552612723.2248260975     3     5.678646e-03     2.274644e-03
    1552613051.6734879017     4     5.529870e-03     9.008393e-04
    1552613495.7696659565     5     5.521264e-03     4.901418e-05
    1552613826.4646339417     6     5.521236e-03     5.834949e-07
    1552613853.9933440685     7     5.521236e-03     3.976156e-10
]
mypush!(df, method_name, time_iter_q_normgradq)

method_name = "DUAL"
time_iter_q_normgradq = [
    1.552613863005504e9      -1    9.973847e-02     9.846679e-02
    1552614157.6419510841     0    9.973847e-02     9.846679e-02
    1552614401.9043951035     1     1.679872e-02     6.089963e-02
    1552614732.284001112     2     6.970948e-03     2.493615e-02
    1552614936.26521492     3     5.678646e-03     2.274644e-03
    1552615127.9626569748     4     5.529870e-03     9.008393e-04
    1552615380.1152670383     5     5.521264e-03     4.901419e-05
    1552615571.9526510239     6     5.521236e-03     5.834920e-07
    1552615600.2187709808     7     5.521236e-03     3.873180e-10
]
mypush!(df, method_name, time_iter_q_normgradq)

method_name = "FLASH"
time_iter_q_normgradq = [
    1.552615608679552e9      -1    9.973847e-02     9.846679e-02
    1552615701.5030999184     0    9.973847e-02     9.846679e-02
    1552615803.8040881157     1     1.679872e-02     6.089963e-02
    1552615931.8884999752     2     6.970948e-03     2.493615e-02
    1552615987.3587679863     3     5.678646e-03     2.274644e-03
    1552616034.0224859715     4     5.529870e-03     9.008393e-04
    1552616088.8196520805     5     5.521264e-03     4.901419e-05
    1552616129.1788799763     6     5.521236e-03     5.834945e-07
    1552616156.7694559097     7     5.521236e-03     3.852644e-10
]
mypush!(df, method_name, time_iter_q_normgradq)

method_name = "FD2"
time_iter_q_normgradq = [
    1.552620626621726e9      -1    9.973847e-02     9.846782e-02
    1552622983.7984650135     0    9.973847e-02     9.846782e-02
    1552625228.503166914     1     3.108380e-02     7.219605e-02
    #1552625454.9590549469     2     3.108380e-02     7.219605e-02
    #1552627662.7417430878     3     1.590823e-02     9.821364e-03
    #1552629859.9612090588     4     1.320026e-02     9.789139e-03
    #1552632089.6627891064     5     9.045239e-03     8.962242e-03
    #1552634318.713821888     6     6.306687e-03     4.704516e-03
    #1552634595.5686850548     7     6.306687e-03     4.704516e-03
    #1552636880.5624759197     8     5.852420e-03     1.519309e-03
    #1552639060.8328490257     9     5.668477e-03     7.470323e-04
    #1552641239.444890976    10     5.538467e-03     1.461994e-04
    #1552643428.2238419056    11     5.528558e-03     1.163430e-04
    #1552643662.9973459244    12     5.528558e-03     1.163430e-04
    #1552643903.8170700073    13     5.528558e-03     1.163430e-04
    #1552646047.9795520306    14     5.523903e-03     3.631611e-05
]
mypush!(df, method_name, time_iter_q_normgradq)
maxtime = diff(time_iter_q_normgradq[[end, 1], 1])

method_name = "HYPER"
time_iter_q_normgradq = [
    1.552616165669928e9      -1    9.973847e-02     9.846679e-02
    1552616608.2364189625     0    9.973847e-02     9.846679e-02
    1552617009.8567430973     1     1.679872e-02     6.089963e-02
    1552617482.9907460213     2     6.970948e-03     2.493615e-02
    1552617840.7531700134     3     5.678646e-03     2.274644e-03
    1552618185.5752429962     4     5.529870e-03     9.008393e-04
    1552618586.4133911133     5     5.521264e-03     4.901419e-05
    1552618925.9181649685     6     5.521236e-03     5.834910e-07
    1552619046.7396450043     7     5.521236e-03     3.690092e-10
]
mypush!(df, method_name, time_iter_q_normgradq)

method_name = "HYPERSMART"
time_iter_q_normgradq = [
    1.552619055883701e9      -1    9.973847e-02     9.846679e-02
    1552619287.9785759449     0    9.973847e-02     9.846679e-02
    1552619528.7757499218     1     1.679872e-02     6.089963e-02
    1552619798.1703469753     2     6.970948e-03     2.493615e-02
    1552619998.1963560581     3     5.678646e-03     2.274644e-03
    1552620185.51917696     4     5.529870e-03     9.008393e-04
    1552620378.0304450989     5     5.521264e-03     4.901420e-05
    1552620560.1322870255     6     5.521236e-03     5.834948e-07
    1552620618.1706409454     7     5.521236e-03     3.844704e-10
]
mypush!(df, method_name, time_iter_q_normgradq)


list_methods = ["FD1", "CSD", "DUAL", "FLASH", "FD2", "HYPER", "HYPERSMART"]
mycolors = [
    "#9970ab"
    "#762a83"
    "#40004b"
    "#000000"
    "#5aae61"
    "#1b7837"
    "#00441b"
]

Array_colors_RGB = [
     0   0   0
     0 114 178
    66 160 213
    86 180 233
   106 200 253
     0 158 115
   230 159   0
]

using Colors
# function to transform RGB (from 0 to 255) color array into list of hex
#function Array_color_RGB_to_hex_list(M)
#    out = Array{String,1}(undef, 0)
#    for icol in 1:size(M, 1)
#        r, g, b = M[icol, :] / 255
#        push!(out, "#" * hex(RGB(r, g, b)))
#    end 
#    return out
#end
#
#mycolors = Array_color_RGB_to_hex_list(Array_colors_RGB)

p = df |>
@vlplot(
    width=500,
    height=300,
    mark={
        :line,
        interpolate="step-before"
    },
    encoding={
        x={:time, title="Elapsed computation time (seconds)", scale={domain=[0,4601]}},
        y={:normgradq, title="norm of gradient", scale={typ=:log}},
        shape={:method, typ="nominal", scale={domain=list_methods}},
        color={:method, typ="nominal", scale={range=mycolors, domain=list_methods}}
    },
    resolve={
        scale={
            color="independent",
            shape="independent"
        },
    }
)

path_to_package_root = joinpath(splitpath(@__DIR__)[1:end-1]...)
pdf_file = joinpath(path_to_package_root, "fig", "Optim_callback_katana_vegalite.pdf")
save(pdf_file, p)

#=

────────────────────────
 Optimizing using method FD1, and printing time and q :

    1.552608569246831e9      -1    9.973847e-02     9.846679e-02
    1552608938.9645440578     0    9.973847e-02     9.846679e-02
    1552609301.4314579964     1     1.679853e-02     6.089921e-02
    1552609702.1624119282     2     6.970752e-03     2.493435e-02
    1552610021.6017289162     3     5.678668e-03     2.275158e-03
    1552610332.3074998856     4     5.529873e-03     9.009779e-04
    1552610652.6657860279     5     5.521264e-03     4.902208e-05
    1552610962.7022309303     6     5.521236e-03     5.855503e-07
    1552610990.2858099937     7     5.521236e-03     3.754357e-10
────────────────────────

────────────────────────
 Optimizing using method CSD, and printing time and q :

    1.552611003792975e9      -1    9.973847e-02     9.846679e-02
    1552611483.8713469505     0    9.973847e-02     9.846679e-02
    1552611867.83081007     1     1.679872e-02     6.089963e-02
    1552612388.0375878811     2     6.970948e-03     2.493615e-02
    1552612723.2248260975     3     5.678646e-03     2.274644e-03
    1552613051.6734879017     4     5.529870e-03     9.008393e-04
    1552613495.7696659565     5     5.521264e-03     4.901418e-05
    1552613826.4646339417     6     5.521236e-03     5.834949e-07
    1552613853.9933440685     7     5.521236e-03     3.976156e-10
────────────────────────

────────────────────────
 Optimizing using method DUAL, and printing time and q :

    1.552613863005504e9      -1    9.973847e-02     9.846679e-02
    1552614157.6419510841     0    9.973847e-02     9.846679e-02
    1552614401.9043951035     1     1.679872e-02     6.089963e-02
    1552614732.284001112     2     6.970948e-03     2.493615e-02
    1552614936.26521492     3     5.678646e-03     2.274644e-03
    1552615127.9626569748     4     5.529870e-03     9.008393e-04
    1552615380.1152670383     5     5.521264e-03     4.901419e-05
    1552615571.9526510239     6     5.521236e-03     5.834920e-07
    1552615600.2187709808     7     5.521236e-03     3.873180e-10
────────────────────────

────────────────────────
 Optimizing using method FLASH, and printing time and q :

    1.552615608679552e9      -1    9.973847e-02     9.846679e-02
    1552615701.5030999184     0    9.973847e-02     9.846679e-02
    1552615803.8040881157     1     1.679872e-02     6.089963e-02
    1552615931.8884999752     2     6.970948e-03     2.493615e-02
    1552615987.3587679863     3     5.678646e-03     2.274644e-03
    1552616034.0224859715     4     5.529870e-03     9.008393e-04
    1552616088.8196520805     5     5.521264e-03     4.901419e-05
    1552616129.1788799763     6     5.521236e-03     5.834945e-07
    1552616156.7694559097     7     5.521236e-03     3.852644e-10
────────────────────────

────────────────────────
 Optimizing using method HYPER, and printing time and q :

    1.552616165669928e9      -1    9.973847e-02     9.846679e-02
    1552616608.2364189625     0    9.973847e-02     9.846679e-02
    1552617009.8567430973     1     1.679872e-02     6.089963e-02
    1552617482.9907460213     2     6.970948e-03     2.493615e-02
    1552617840.7531700134     3     5.678646e-03     2.274644e-03
    1552618185.5752429962     4     5.529870e-03     9.008393e-04
    1552618586.4133911133     5     5.521264e-03     4.901419e-05
    1552618925.9181649685     6     5.521236e-03     5.834910e-07
    1552619046.7396450043     7     5.521236e-03     3.690092e-10
────────────────────────

────────────────────────
 Optimizing using method HYPERSMART, and printing time and q :

    1.552619055883701e9      -1    9.973847e-02     9.846679e-02
    1552619287.9785759449     0    9.973847e-02     9.846679e-02
    1552619528.7757499218     1     1.679872e-02     6.089963e-02
    1552619798.1703469753     2     6.970948e-03     2.493615e-02
    1552619998.1963560581     3     5.678646e-03     2.274644e-03
    1552620185.51917696     4     5.529870e-03     9.008393e-04
    1552620378.0304450989     5     5.521264e-03     4.901420e-05
    1552620560.1322870255     6     5.521236e-03     5.834948e-07
    1552620618.1706409454     7     5.521236e-03     3.844704e-10
────────────────────────

────────────────────────
 Optimizing using method FD2, and printing time and q :

    1.552620626621726e9      -1    9.973847e-02     9.846782e-02
    1552622983.7984650135     0    9.973847e-02     9.846782e-02
    1552625228.503166914     1     3.108380e-02     7.219605e-02
    1552625454.9590549469     2     3.108380e-02     7.219605e-02
    1552627662.7417430878     3     1.590823e-02     9.821364e-03
    1552629859.9612090588     4     1.320026e-02     9.789139e-03
    1552632089.6627891064     5     9.045239e-03     8.962242e-03
    1552634318.713821888     6     6.306687e-03     4.704516e-03
    1552634595.5686850548     7     6.306687e-03     4.704516e-03
    1552636880.5624759197     8     5.852420e-03     1.519309e-03
    1552639060.8328490257     9     5.668477e-03     7.470323e-04
    1552641239.444890976    10     5.538467e-03     1.461994e-04
    1552643428.2238419056    11     5.528558e-03     1.163430e-04
    1552643662.9973459244    12     5.528558e-03     1.163430e-04
    1552643903.8170700073    13     5.528558e-03     1.163430e-04
    1552646047.9795520306    14     5.523903e-03     3.631611e-05
────────────────────────
=#
