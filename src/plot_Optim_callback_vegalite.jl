using VegaLite, DataFrames #
using LaTeXStrings




df = DataFrame(
    method = Array{String}(undef, 0),
    time = Array{Float64}(undef, 0),
    iteration = Array{Int64}(undef, 0),
    qval = Array{Float64}(undef, 0),
    normgradq = Array{Float64}(undef, 0)
)
function mypush!(df, method_name, time_iter_q_normgradq)
    start_time = time_iter_q_normgradq[1, 1]
    for i in 1:size(time_iter_q_normgradq, 1)
        time_iter_q_normgradq[i, 1] -= start_time
        time_iter_q_normgradq[:, 1] .= max.(time_iter_q_normgradq[:, 1], 100.0)
        push!(df, [method_name; time_iter_q_normgradq[i, :]])
    end
    return df
end


println("The data being plotted was copy-pasted from Katana output!")
#    time                   iteration      q(λ)           |Dq(λ)|
method_name = "FLASH"
time_iter_q_normgradq = [
    1.552794942847508e9    -1    9.973847e-02     9.846679e-02
    1552795040.2886281013     0    9.973847e-02     9.846679e-02
    1552795148.5630168915     1     1.679872e-02     6.089963e-02
    1552795286.9263110161     2     6.970948e-03     2.493615e-02
    1552795347.3846299648     3     5.678646e-03     2.274644e-03
    1552795398.2085559368     4     5.529870e-03     9.008393e-04
    1552795457.3615679741     5     5.521264e-03     4.901419e-05
    1552795501.2421419621     6     5.521236e-03     5.834945e-07
    1552795531.579652071     7     5.521236e-03     3.852644e-10
]
mypush!(df, method_name, time_iter_q_normgradq)

method_name = "DUAL"
time_iter_q_normgradq = [
    1.552793059750484e9    -1    9.973847e-02     9.846679e-02
    1552793374.534514904     0    9.973847e-02     9.846679e-02
    1552793638.5581929684     1     1.679872e-02     6.089963e-02
    1552793990.0184469223     2     6.970948e-03     2.493615e-02
    1552794210.1387019157     3     5.678646e-03     2.274644e-03
    1552794419.596570015     4     5.529870e-03     9.008393e-04
    1552794694.4244589806     5     5.521264e-03     4.901419e-05
    1552794903.4728798866     6     5.521236e-03     5.834920e-07
    1552794933.8003909588     7     5.521236e-03     3.873180e-10
]
mypush!(df, method_name, time_iter_q_normgradq)

method_name = "FD1"
time_iter_q_normgradq = [
    1.552787529875006e9    -1    9.973847e-02     9.846679e-02
    1552787899.7354209423     0    9.973847e-02     9.846679e-02
    1552788258.0389111042     1     1.679853e-02     6.089921e-02
    1552788681.100249052     2     6.970752e-03     2.493435e-02
    1552789027.8423800468     3     5.678668e-03     2.275158e-03
    1552789352.5531599522     4     5.529873e-03     9.009779e-04
    1552789692.2698249817     5     5.521264e-03     4.902208e-05
    1552790018.8086619377     6     5.521236e-03     5.855503e-07
    1552790048.6772348881     7     5.521236e-03     3.754357e-10
]
mypush!(df, method_name, time_iter_q_normgradq)

method_name = "CSD"
time_iter_q_normgradq = [
    1.552790063219551e9    -1    9.973847e-02     9.846679e-02
    1552790565.3498570919     0    9.973847e-02     9.846679e-02
    1552790964.6460831165     1     1.679872e-02     6.089963e-02
    1552791512.4574530125     2     6.970948e-03     2.493615e-02
    1552791864.2524409294     3     5.678646e-03     2.274644e-03
    1552792211.3065369129     4     5.529870e-03     9.008393e-04
    1552792671.6619920731     5     5.521264e-03     4.901418e-05
    1552793021.186480999     6     5.521236e-03     5.834949e-07
    1552793050.7143919468     7     5.521236e-03     3.976156e-10
]
mypush!(df, method_name, time_iter_q_normgradq)


method_name = "HYPERSMART"
time_iter_q_normgradq = [
    1.552804121835032e9    -1    9.973847e-02     9.846679e-02
    1552804316.6836709976     0    9.973847e-02     9.846679e-02
    1552804516.6240720749     1     1.679872e-02     6.089963e-02
    1552804741.982724905     2     6.970948e-03     2.493615e-02
    1552804894.6315860748     3     5.678646e-03     2.274644e-03
    1552805038.5066490173     4     5.529870e-03     9.008393e-04
    1552805192.4391610622     5     5.521264e-03     4.901420e-05
    1552805329.9542219639     6     5.521236e-03     5.834948e-07
    1552805394.3121159077     7     5.521236e-03     3.844704e-10
]
mypush!(df, method_name, time_iter_q_normgradq)

method_name = "HYPER"
time_iter_q_normgradq = [
    1.552795540651556e9    -1    9.973847e-02     9.846679e-02
    1552796965.6120638847     0    9.973847e-02     9.846679e-02
    1552798037.2505609989     1     1.679872e-02     6.089963e-02
    1552799505.5251410007     2     6.970948e-03     2.493615e-02
    1552800557.325717926     3     5.678646e-03     2.274644e-03
    1552801576.1613559723     4     5.529870e-03     9.008393e-04
    1552802939.4574890137     5     5.521264e-03     4.901419e-05
    1552803981.4209148884     6     5.521236e-03     5.834979e-07
    1552804112.5411839485     7     5.521236e-03     3.859966e-10
]
mypush!(df, method_name, time_iter_q_normgradq)


method_name = "FD2"
time_iter_q_normgradq = [
    1.55280540361132e9    -1    9.973847e-02     9.846782e-02
    1552807913.6068110466     0    9.973847e-02     9.846782e-02
    1552810302.2568759918     1     3.108380e-02     7.219605e-02
    1552810544.1626069546     2     3.108380e-02     7.219605e-02
    1552812899.2318298817     3     1.590823e-02     9.821364e-03
    1552815238.1801280975     4     1.320026e-02     9.789139e-03
    1552817620.7070660591     5     9.045239e-03     8.962242e-03
    1552820003.369535923     6     6.306687e-03     4.704516e-03
    1552820299.3728759289     7     6.306687e-03     4.704516e-03
    1552822741.3364329338     8     5.852420e-03     1.519309e-03
    1552825070.3583641052     9     5.668477e-03     7.470323e-04
    1552827398.2684280872    10     5.538467e-03     1.461994e-04
    1552829734.149422884    11     5.528558e-03     1.163430e-04
    1552829987.9145929813    12     5.528558e-03     1.163430e-04
    1552830249.1705360413    13     5.528558e-03     1.163430e-04
    1552832559.248773098    14     5.523903e-03     3.631611e-05
]
mypush!(df, method_name, time_iter_q_normgradq)

list_methods = ["FLASH", "DUAL", "FD1", "CSD", "HYPERSMART", "HYPER", "FD2"]
mycolors = [
    "#000000"
    "#40004b"
    "#9970ab"
    "#762a83"
    "#00441b"
    "#1b7837"
    "#5aae61"
]

Array_colors_RGB = [
     0   0   0
     0 114 178
    66 160 213
    86 180 233
   106 200 253
     0 158 115
   230 159   0
]

mymarkers = ["cross", "diamond", "square", "circle", "cross", "diamond", "square"]

using Colors
# function to transform RGB (from 0 to 255) color array into list of hex
#function Array_color_RGB_to_hex_list(M)
#    out = Array{String,1}(undef, 0)
#    for icol in 1:size(M, 1)
#        r, g, b = M[icol, :] / 255
#        push!(out, "#" * hex(RGB(r, g, b)))
#    end 
#    return out
#end
#
#mycolors = Array_color_RGB_to_hex_list(Array_colors_RGB)

p = df |>
@vlplot(
    width=500,
    height=300,
    mark={
        :line,
        interpolate="step-before",
    },
    encoding={
        x={:time, title="Elapsed computation time (seconds)", scale={typ=:log,domain=[100,30000]}},
        y={:normgradq, title="|∇f|", scale={typ=:log}},
        shape={:method, typ="nominal", scale={range=mymarkers, domain=list_methods}, legend={orient="bottom-right"}},
        color={:method, typ="nominal", scale={range=mycolors, domain=list_methods}}
    },
    resolve={
        scale={
            color="independent",
            shape="independent"
        },
    }
)

path_to_package_root = joinpath(splitpath(@__DIR__)[1:end-1]...)
pdf_file = joinpath(path_to_package_root, "fig", "Optim_callback_katana_vegalite.pdf")
save(pdf_file, p)

#=

────────────────────────
 Optimizing using method FD1, and printing time and q :

    1.552787529875006e9    -1    9.973847e-02     9.846679e-02
    1552787899.7354209423     0    9.973847e-02     9.846679e-02
    1552788258.0389111042     1     1.679853e-02     6.089921e-02
    1552788681.100249052     2     6.970752e-03     2.493435e-02
    1552789027.8423800468     3     5.678668e-03     2.275158e-03
    1552789352.5531599522     4     5.529873e-03     9.009779e-04
    1552789692.2698249817     5     5.521264e-03     4.902208e-05
    1552790018.8086619377     6     5.521236e-03     5.855503e-07
    1552790048.6772348881     7     5.521236e-03     3.754357e-10
────────────────────────

────────────────────────
 Optimizing using method CSD, and printing time and q :

    1.552790063219551e9    -1    9.973847e-02     9.846679e-02
    1552790565.3498570919     0    9.973847e-02     9.846679e-02
    1552790964.6460831165     1     1.679872e-02     6.089963e-02
    1552791512.4574530125     2     6.970948e-03     2.493615e-02
    1552791864.2524409294     3     5.678646e-03     2.274644e-03
    1552792211.3065369129     4     5.529870e-03     9.008393e-04
    1552792671.6619920731     5     5.521264e-03     4.901418e-05
    1552793021.186480999     6     5.521236e-03     5.834949e-07
    1552793050.7143919468     7     5.521236e-03     3.976156e-10
────────────────────────

────────────────────────
 Optimizing using method DUAL, and printing time and q :

    1.552793059750484e9    -1    9.973847e-02     9.846679e-02
    1552793374.534514904     0    9.973847e-02     9.846679e-02
    1552793638.5581929684     1     1.679872e-02     6.089963e-02
    1552793990.0184469223     2     6.970948e-03     2.493615e-02
    1552794210.1387019157     3     5.678646e-03     2.274644e-03
    1552794419.596570015     4     5.529870e-03     9.008393e-04
    1552794694.4244589806     5     5.521264e-03     4.901419e-05
    1552794903.4728798866     6     5.521236e-03     5.834920e-07
    1552794933.8003909588     7     5.521236e-03     3.873180e-10
────────────────────────

────────────────────────
 Optimizing using method FLASH, and printing time and q :

    1.552794942847508e9    -1    9.973847e-02     9.846679e-02
    1552795040.2886281013     0    9.973847e-02     9.846679e-02
    1552795148.5630168915     1     1.679872e-02     6.089963e-02
    1552795286.9263110161     2     6.970948e-03     2.493615e-02
    1552795347.3846299648     3     5.678646e-03     2.274644e-03
    1552795398.2085559368     4     5.529870e-03     9.008393e-04
    1552795457.3615679741     5     5.521264e-03     4.901419e-05
    1552795501.2421419621     6     5.521236e-03     5.834945e-07
    1552795531.579652071     7     5.521236e-03     3.852644e-10
────────────────────────

────────────────────────
 Optimizing using method HYPER, and printing time and q :

    1.552795540651556e9    -1    9.973847e-02     9.846679e-02
    1552796965.6120638847     0    9.973847e-02     9.846679e-02
    1552798037.2505609989     1     1.679872e-02     6.089963e-02
    1552799505.5251410007     2     6.970948e-03     2.493615e-02
    1552800557.325717926     3     5.678646e-03     2.274644e-03
    1552801576.1613559723     4     5.529870e-03     9.008393e-04
    1552802939.4574890137     5     5.521264e-03     4.901419e-05
    1552803981.4209148884     6     5.521236e-03     5.834979e-07
    1552804112.5411839485     7     5.521236e-03     3.859966e-10
────────────────────────

────────────────────────
 Optimizing using method HYPERSMART, and printing time and q :

    1.552804121835032e9    -1    9.973847e-02     9.846679e-02
    1552804316.6836709976     0    9.973847e-02     9.846679e-02
    1552804516.6240720749     1     1.679872e-02     6.089963e-02
    1552804741.982724905     2     6.970948e-03     2.493615e-02
    1552804894.6315860748     3     5.678646e-03     2.274644e-03
    1552805038.5066490173     4     5.529870e-03     9.008393e-04
    1552805192.4391610622     5     5.521264e-03     4.901420e-05
    1552805329.9542219639     6     5.521236e-03     5.834948e-07
    1552805394.3121159077     7     5.521236e-03     3.844704e-10
────────────────────────

────────────────────────
 Optimizing using method FD2, and printing time and q :

    1.55280540361132e9    -1    9.973847e-02     9.846782e-02
    1552807913.6068110466     0    9.973847e-02     9.846782e-02
    1552810302.2568759918     1     3.108380e-02     7.219605e-02
    1552810544.1626069546     2     3.108380e-02     7.219605e-02
    1552812899.2318298817     3     1.590823e-02     9.821364e-03
    1552815238.1801280975     4     1.320026e-02     9.789139e-03
    1552817620.7070660591     5     9.045239e-03     8.962242e-03
    1552820003.369535923     6     6.306687e-03     4.704516e-03
    1552820299.3728759289     7     6.306687e-03     4.704516e-03
    1552822741.3364329338     8     5.852420e-03     1.519309e-03
    1552825070.3583641052     9     5.668477e-03     7.470323e-04
    1552827398.2684280872    10     5.538467e-03     1.461994e-04
    1552829734.149422884    11     5.528558e-03     1.163430e-04
    1552829987.9145929813    12     5.528558e-03     1.163430e-04
    1552830249.1705360413    13     5.528558e-03     1.163430e-04
    1552832559.248773098    14     5.523903e-03     3.631611e-05
────────────────────────=#
