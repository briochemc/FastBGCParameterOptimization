using VegaLite, DataFrames #
using LaTeXStrings




df = DataFrame(
    method = Array{String}(undef, 0),
    time = Array{Float64}(undef, 0),
    iteration = Array{Int64}(undef, 0),
    qval = Array{Float64}(undef, 0),
    normgradq = Array{Float64}(undef, 0)
)
function mypush!(df, method_name, time_iter_q_normgradq)
    start_time = time_iter_q_normgradq[1, 1]
    for i in 1:size(time_iter_q_normgradq, 1)
        time_iter_q_normgradq[i, 1] -= start_time
        push!(df, [method_name; time_iter_q_normgradq[i, :]])
    end
    return df
end

println("The data being plotted was copy-pasted from Katana output!")
#    time                   iteration      q(λ)           |Dq(λ)|
method_name = "FLASH"
time_iter_q_normgradq = [
    1.552526180281911e9     -1     9.973847e-02     9.846679e-02
    1552526282.269867897     0     9.973847e-02     9.846679e-02
    1552526384.3718149662     1     1.679872e-02     6.089963e-02
    1552526514.5941131115     2     6.970948e-03     2.493615e-02
    1552526570.9998140335     3     5.678646e-03     2.274644e-03
    1552526617.5801339149     4     5.529870e-03     9.008393e-04
    1552526672.6448359489     5     5.521264e-03     4.901419e-05
    1552526713.1488730907     6     5.521236e-03     5.834945e-07
    1552526741.1466600895     7     5.521236e-03     3.852644e-10
]
mypush!(df, method_name, time_iter_q_normgradq)


method_name = "FiniteDiff"
time_iter_q_normgradq = [
    1.552526754949824e9     -1     9.973847e-02     9.846679e-02
    1552527119.823554039     0     9.973847e-02     9.846679e-02
    1552527476.7208650112     1     1.679853e-02     6.089921e-02
    1552527881.236438036     2     6.970752e-03     2.493435e-02
    1552528205.3176989555     3     5.678668e-03     2.275158e-03
    1552528515.3595321178     4     5.529873e-03     9.009779e-04
    1552528836.8218939304     5     5.521264e-03     4.902208e-05
    1552529148.3046700954     6     5.521236e-03     5.855503e-07
    1552529176.3852200508     7     5.521236e-03     3.754357e-10
]
mypush!(df, method_name, time_iter_q_normgradq)

method_name = "Dual"
time_iter_q_normgradq = [
    1.552529185369161e9     -1     9.973847e-02     9.846679e-02
    1552529480.3993010521     0     9.973847e-02     9.846679e-02
    1552529726.3312430382     1     1.679872e-02     6.089963e-02
    1552530057.4325709343     2     6.970948e-03     2.493615e-02
    1552530261.9322021008     3     5.678646e-03     2.274644e-03
    1552530453.7604649067     4     5.529870e-03     9.008393e-04
    1552530705.4200620651     5     5.521264e-03     4.901419e-05
    1552530896.3696670532     6     5.521236e-03     5.834920e-07
    1552530924.2158849239     7     5.521236e-03     3.873180e-10
]
mypush!(df, method_name, time_iter_q_normgradq)

method_name = "Complex"
time_iter_q_normgradq = [
    1.552530933270068e9     -1     9.973847e-02     9.846679e-02
    1552531408.0441589355     0     9.973847e-02     9.846679e-02
    1552531797.0336489677     1     1.679872e-02     6.089963e-02
    1552532325.3568949699     2     6.970948e-03     2.493615e-02
    1552532663.3421139717     3     5.678646e-03     2.274644e-03
    1552532995.4963569641     4     5.529870e-03     9.008393e-04
    1552533444.439604044     5     5.521264e-03     4.901418e-05
    1552533788.011797905     6     5.521236e-03     5.834949e-07
    1552533816.7587840557     7     5.521236e-03     3.976156e-10
]
mypush!(df, method_name, time_iter_q_normgradq)

method_name = "HyperDual"
time_iter_q_normgradq = [
    1.552533825350186e9     -1     9.973847e-02     9.846679e-02
    1552534278.4934380054     0     9.973847e-02     9.846679e-02
    1552534703.3563399315     1     1.679872e-02     6.089963e-02
    1552535212.794303894     2     6.970948e-03     2.493615e-02
    1552535597.832529068     3     5.678646e-03     2.274644e-03
    1552535949.1430649757     4     5.529870e-03     9.008393e-04
    1552536368.0821270943     5     5.521264e-03     4.901419e-05
    1552536728.9678969383     6     5.521236e-03     5.834910e-07
    1552536853.5175740719     7     5.521236e-03     3.690092e-10
]
mypush!(df, method_name, time_iter_q_normgradq)


method_name = "sym-HyperDual"
time_iter_q_normgradq = [
    1.55253686240168e9     -1     9.973847e-02     9.846679e-02
    1552537243.3531250954     0     9.973847e-02     9.846679e-02
    1552537578.9924709797     1     1.679872e-02     6.089963e-02
    1552538000.7102780342     2     6.970948e-03     2.493615e-02
    1552538299.7715380192     3     5.678646e-03     2.274644e-03
    1552538567.7233479023     4     5.529870e-03     9.008393e-04
    1552538897.4456319809     5     5.521264e-03     4.901419e-05
    1552539172.1962709427     6     5.521236e-03     5.834910e-07
    1552539298.9188320637     7     5.521236e-03     3.690092e-10
]
mypush!(df, method_name, time_iter_q_normgradq)

method_name = "HYPERSMART"
time_iter_q_normgradq = [
    1.552539307967101e9     -1     9.973847e-02     9.846679e-02
    1552539543.0280489922     0     9.973847e-02     9.846679e-02
    1552539787.1161000729     1     1.679872e-02     6.089963e-02
    1552540057.451253891     2     6.970948e-03     2.493615e-02
    1552540251.958425045     3     5.678646e-03     2.274644e-03
    1552540429.5162880421     4     5.529870e-03     9.008393e-04
    1552540622.1970739365     5     5.521264e-03     4.901418e-05
    1552540793.6685869694     6     5.521236e-03     5.834946e-07
    1552540872.4114739895     7     5.521236e-03     3.852952e-10
]
mypush!(df, method_name, time_iter_q_normgradq)

list_methods = ["FLASH", "Dual", "HYPERSMART", "sym-HyperDual", "HyperDual", "FiniteDiff", "Complex"]

Array_colors_RGB = [
     0   0   0
     0 114 178
    66 160 213
    86 180 233
   106 200 253
     0 158 115
   230 159   0
]

using Colors
# function to transform RGB (from 0 to 255) color array into list of hex
function Array_color_RGB_to_hex_list(M)
    out = Array{String,1}(undef, 0)
    for icol in 1:size(M, 1)
        r, g, b = M[icol, :] / 255
        push!(out, "#" * hex(RGB(r, g, b)))
    end 
    return out
end

mycolors = Array_color_RGB_to_hex_list(Array_colors_RGB)

p = df |>
@vlplot(
    width=300,
    mark={
        :line,
        interpolate="step-before"
    },
    encoding={
        x={:time, title="Elapsed computation time (seconds)"},
        y={:normgradq, title="norm of gradient", scale={typ=:log}},
        shape={:method, typ="nominal", scale={domain=list_methods}},
        color={:method, typ="nominal", scale={range=mycolors, domain=list_methods}}
    },
    resolve={
        scale={
            color="independent",
            shape="independent"
        },
    }
)

path_to_package_root = joinpath(splitpath(@__DIR__)[1:end-1]...)
pdf_file = joinpath(path_to_package_root, "fig", "Optim_callback_katana_vegalite.pdf")
save(pdf_file, p)

#=

────────────────────────
 Optimizing using method FLASH, and printing time and q :

    1.552526180281911e9     -1     9.973847e-02     9.846679e-02
    1552526282.269867897     0     9.973847e-02     9.846679e-02
    1552526384.3718149662     1     1.679872e-02     6.089963e-02
    1552526514.5941131115     2     6.970948e-03     2.493615e-02
    1552526570.9998140335     3     5.678646e-03     2.274644e-03
    1552526617.5801339149     4     5.529870e-03     9.008393e-04
    1552526672.6448359489     5     5.521264e-03     4.901419e-05
    1552526713.1488730907     6     5.521236e-03     5.834945e-07
    1552526741.1466600895     7     5.521236e-03     3.852644e-10
────────────────────────

────────────────────────
 Optimizing using method FiniteDiff, and printing time and q :

    1.552526754949824e9     -1     9.973847e-02     9.846679e-02
    1552527119.823554039     0     9.973847e-02     9.846679e-02
    1552527476.7208650112     1     1.679853e-02     6.089921e-02
    1552527881.236438036     2     6.970752e-03     2.493435e-02
    1552528205.3176989555     3     5.678668e-03     2.275158e-03
    1552528515.3595321178     4     5.529873e-03     9.009779e-04
    1552528836.8218939304     5     5.521264e-03     4.902208e-05
    1552529148.3046700954     6     5.521236e-03     5.855503e-07
    1552529176.3852200508     7     5.521236e-03     3.754357e-10
────────────────────────

────────────────────────
 Optimizing using method Dual, and printing time and q :

    1.552529185369161e9     -1     9.973847e-02     9.846679e-02
    1552529480.3993010521     0     9.973847e-02     9.846679e-02
    1552529726.3312430382     1     1.679872e-02     6.089963e-02
    1552530057.4325709343     2     6.970948e-03     2.493615e-02
    1552530261.9322021008     3     5.678646e-03     2.274644e-03
    1552530453.7604649067     4     5.529870e-03     9.008393e-04
    1552530705.4200620651     5     5.521264e-03     4.901419e-05
    1552530896.3696670532     6     5.521236e-03     5.834920e-07
    1552530924.2158849239     7     5.521236e-03     3.873180e-10
────────────────────────

────────────────────────
 Optimizing using method Complex, and printing time and q :

    1.552530933270068e9     -1     9.973847e-02     9.846679e-02
    1552531408.0441589355     0     9.973847e-02     9.846679e-02
    1552531797.0336489677     1     1.679872e-02     6.089963e-02
    1552532325.3568949699     2     6.970948e-03     2.493615e-02
    1552532663.3421139717     3     5.678646e-03     2.274644e-03
    1552532995.4963569641     4     5.529870e-03     9.008393e-04
    1552533444.439604044     5     5.521264e-03     4.901418e-05
    1552533788.011797905     6     5.521236e-03     5.834949e-07
    1552533816.7587840557     7     5.521236e-03     3.976156e-10
────────────────────────

────────────────────────
 Optimizing using method HyperDual, and printing time and q :

    1.552533825350186e9     -1     9.973847e-02     9.846679e-02
    1552534278.4934380054     0     9.973847e-02     9.846679e-02
    1552534703.3563399315     1     1.679872e-02     6.089963e-02
    1552535212.794303894     2     6.970948e-03     2.493615e-02
    1552535597.832529068     3     5.678646e-03     2.274644e-03
    1552535949.1430649757     4     5.529870e-03     9.008393e-04
    1552536368.0821270943     5     5.521264e-03     4.901419e-05
    1552536728.9678969383     6     5.521236e-03     5.834910e-07
    1552536853.5175740719     7     5.521236e-03     3.690092e-10
────────────────────────

────────────────────────
 Optimizing using method sHyperDual, and printing time and q :

    1.55253686240168e9     -1     9.973847e-02     9.846679e-02
    1552537243.3531250954     0     9.973847e-02     9.846679e-02
    1552537578.9924709797     1     1.679872e-02     6.089963e-02
    1552538000.7102780342     2     6.970948e-03     2.493615e-02
    1552538299.7715380192     3     5.678646e-03     2.274644e-03
    1552538567.7233479023     4     5.529870e-03     9.008393e-04
    1552538897.4456319809     5     5.521264e-03     4.901419e-05
    1552539172.1962709427     6     5.521236e-03     5.834910e-07
    1552539298.9188320637     7     5.521236e-03     3.690092e-10
────────────────────────

────────────────────────
 Optimizing using method bHyperDual, and printing time and q :

    1.552539307967101e9     -1     9.973847e-02     9.846679e-02
    1552539543.0280489922     0     9.973847e-02     9.846679e-02
    1552539787.1161000729     1     1.679872e-02     6.089963e-02
    1552540057.451253891     2     6.970948e-03     2.493615e-02
    1552540251.958425045     3     5.678646e-03     2.274644e-03
    1552540429.5162880421     4     5.529870e-03     9.008393e-04
    1552540622.1970739365     5     5.521264e-03     4.901418e-05
    1552540793.6685869694     6     5.521236e-03     5.834946e-07
    1552540872.4114739895     7     5.521236e-03     3.852952e-10
────────────────────────

=#
